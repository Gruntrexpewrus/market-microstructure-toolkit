name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:

jobs:
  test:
    name: test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    env:
      MMT_LOG_DIR: tests/_artifacts/logs   # your tests expect this path
      MPLBACKEND: Agg                      # headless matplotlib
      PYTHONUTF8: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Prepare artifacts dirs
        run: |
          mkdir -p tests/_artifacts/logs
          mkdir -p tests/_artifacts

      - name: Install package + dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev] || pip install -e . pre-commit pytest ruff black
          pip install pyarrow ccxt  # optional deps used by your suite/CLIs

      - name: Lint (pre-commit)
        uses: pre-commit/action@v3.0.1

      - name: Run tests
        run: pytest -q --maxfail=1 -ra

      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs-${{ matrix.python-version }}
          path: tests/_artifacts/logs/*
          if-no-files-found: ignore

  build:
    if: github.ref_type == 'tag' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - name: Build dist
        run: |
          python -m pip install --upgrade build
          python -m build
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true