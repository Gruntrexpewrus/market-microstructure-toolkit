name: CI

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install package (dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          # optional parquet and ccxt
          pip install pyarrow ccxt
          # don't install ccxtpro in CI

      - name: Lint (pre-commit)
        uses: pre-commit/action@v3.0.1

      - name: Run tests
        run: pytest -q

  build:
    # Build wheels/sdist on tags and main
    if: github.ref_type == 'tag' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Build dist
        run: |
          python -m pip install --upgrade build
          python -m build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    # Publish to PyPI when a tag like v0.1.1 is pushed
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for PyPI Trusted Publishing
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # With Trusted Publishing you don't need a token
          # If not using trusted, add: password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true